@inject IClassService ClassService
@inject ICharacterService CharacterService

<h1>characters page</h1>

<SfGrid DataSource="@Characters" AllowPaging="true">
    <GridColumns>
        <GridColumn Field="@nameof(CharacterDto.Name)" HeaderText="Nickname" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="Class.Name" HeaderText="Class" ></GridColumn>
        <GridColumn Field="MainSpec.Name" HeaderText="Main spec" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(CharacterDto.ItemLevel)></GridColumn>
    </GridColumns>
</SfGrid>


@code {
    CreateCharacterDto CreateCharacterDto = new();
    List<CharacterDto> Characters = new();
    List<CharacterClassDto> CharacterClasses = new();
    
    string errorMessage = string.Empty;
    string createCharacterMessage = string.Empty;
    string alertCss = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var classesResponse = await ClassService.GetClasses();
        if (!classesResponse.Success)
        {
            errorMessage = classesResponse.Message;
        }
        else
        {
            CharacterClasses = classesResponse.Data;
        }

        var charactersResponse = await CharacterService.GetUserCharacters();
        if (!charactersResponse.Success)
        {
            errorMessage = charactersResponse.Message;
        }
        else
        {
            Characters = charactersResponse.Data;
        }
    }
}