@inject IAuthService AuthService

<h1 class="mt-4">Change your password!</h1>

<EditForm Model="dto" OnValidSubmit="ChangePasswordx">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="d-flex flex-column justify-content-center align-items-center mt-5">
        <div class="mb-3 w-50">
            <label for="password">New password</label>
            <InputText id="password" @bind-Value="dto.Password" class="form-control mt-1" type="password" />
            <ValidationMessage For="@(()=>dto.Password)" />
        </div>
        <div class="mb-3 w-50">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="confirmPassword" @bind-Value="dto.ConfirmPassword" class="form-control mt-1" type="password" />
            <ValidationMessage For="@(()=>dto.ConfirmPassword)" />
        </div>
        <button type="submit" class="btn btn-primary">Change Password</button>
        <div>
            <p class="mb-0 mt-3">
                <NavLink href="userpanel" class="text-white-50 fw-bold">Back to User Panel</NavLink>
            </p>
        </div>
        <div class="mt-5 alert @alertCss">
            @message
        </div>
    </div>

</EditForm>

@code {
    ChangePasswordDto dto = new ChangePasswordDto();
    string message = string.Empty;
    string alertCss = string.Empty;
    private async Task ChangePasswordx()
    {
        var result = await AuthService.ChangePassword(dto);
        if (!result.Success)
        {
            alertCss = "alert-danger";
        }
        else
        {
            alertCss = "alert-success";
        }
        message = result.Message;
        
    }
}
