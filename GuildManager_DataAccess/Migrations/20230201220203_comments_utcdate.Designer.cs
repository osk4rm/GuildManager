// <auto-generated />
using System;
using GuildManager_DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuildManagerDataAccess.Migrations
{
    [DbContext(typeof(GuildManagerDbContext))]
    [Migration("20230201220203_comments_utcdate")]
    partial class commentsutcdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("ClassSpecializationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ClassSpecializationId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.CharacterClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CharacterClasses");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.ClassSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterClassId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterClassId");

                    b.ToTable("ClassSpecializations");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RaidEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RaidEventId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AutoAccept")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RaidDifficulty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RaidLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RaidLocationId");

                    b.ToTable("RaidEvents");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidEventCharacter", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("RaidEventId")
                        .HasColumnType("int");

                    b.Property<int>("AcceptanceStatus")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "RaidEventId");

                    b.HasIndex("RaidEventId");

                    b.ToTable("RaidEventCharacter");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidExpansion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RaidExpansions");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RaidExpansionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RaidExpansionId");

                    b.ToTable("RaidLocations");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Character", b =>
                {
                    b.HasOne("GuildManager_DataAccess.Entities.CharacterClass", "Class")
                        .WithMany("Characters")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GuildManager_DataAccess.Entities.ClassSpecialization", "MainSpec")
                        .WithMany("Characters")
                        .HasForeignKey("ClassSpecializationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GuildManager_DataAccess.Entities.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("MainSpec");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.ClassSpecialization", b =>
                {
                    b.HasOne("GuildManager_DataAccess.Entities.CharacterClass", "CharacterClass")
                        .WithMany("ClassSpecializations")
                        .HasForeignKey("CharacterClassId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("CharacterClass");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.Comment", b =>
                {
                    b.HasOne("GuildManager_DataAccess.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GuildManager_DataAccess.Entities.Raids.RaidEvent", "RaidEvent")
                        .WithMany("Comments")
                        .HasForeignKey("RaidEventId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("RaidEvent");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidEvent", b =>
                {
                    b.HasOne("GuildManager_DataAccess.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GuildManager_DataAccess.Entities.Raids.RaidLocation", "RaidLocation")
                        .WithMany()
                        .HasForeignKey("RaidLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("RaidLocation");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidEventCharacter", b =>
                {
                    b.HasOne("GuildManager_DataAccess.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuildManager_DataAccess.Entities.Raids.RaidEvent", "RaidEvent")
                        .WithMany()
                        .HasForeignKey("RaidEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("RaidEvent");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidLocation", b =>
                {
                    b.HasOne("GuildManager_DataAccess.Entities.Raids.RaidExpansion", "Expansion")
                        .WithMany("RaidLocations")
                        .HasForeignKey("RaidExpansionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Expansion");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.User", b =>
                {
                    b.HasOne("GuildManager_DataAccess.Entities.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.CharacterClass", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("ClassSpecializations");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.ClassSpecialization", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidEvent", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.Raids.RaidExpansion", b =>
                {
                    b.Navigation("RaidLocations");
                });

            modelBuilder.Entity("GuildManager_DataAccess.Entities.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
