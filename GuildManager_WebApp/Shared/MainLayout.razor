@inherits LayoutComponentBase
@attribute [Authorize]
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager

<AuthorizeView>
    <Authorized>
        <div class="panel">
            <div class="row m-0 h-100">
                <div class="panel-left col-2 p-0 px-4 text-white text-center">
                    <section class="user-box mt-3">
                        <p class="mb-0 hi-text">Hi, @context.User.Identity.Name </p>
                        <div class="flex-column">
                            <NavLink href="userpanel">
                                <i class="fa-solid fa-gear"></i>
                            </NavLink>
                            <NavLink href="#" @onclick="Logout">
                                <i class="fa-solid fa-right-from-bracket"></i>
                            </NavLink>
                            
                        </div>
                    </section>
                    <NavMenu />
                    
                </div>
                <div class="panel-right col-10 p-0 px-4 text-white text-center">
                    @Body
                </div>

            </div>
        </div>

    </Authorized>
</AuthorizeView>
<style>
    body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        min-width: 1600px;
        font-family: 'Montserrat', sans-serif;
        background-image: linear-gradient(to left bottom, #565459, #4a494d, #3f3d42, #343337, #29282c);
    }
</style>

@code{
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected async override Task OnInitializedAsync()
    {
        AuthStat = AuthStateProvider.GetAuthenticationStateAsync();
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavManager.NavigateTo("login");
        }
    }
    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthStateProvider.GetAuthenticationStateAsync();
        NavManager.NavigateTo("login");
    }

}                   